package org.web3j.contractWrapper.generated;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.9.0.
 */
@SuppressWarnings("rawtypes")
public class AccountController extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50604051620018b6380380620018b6833981016040819052610031916100dc565b60028054600160a060020a031916600160a060020a038416179055604051610058906100b6565b604051809103906000f080158015610074573d6000803e3d6000fd5b5060008054600160a060020a03928316600160a060020a0319918216179091556001805493909216928116929092179055600380549091163317905550610116565b6107bb80620010fb83390190565b600160a060020a03811681146100d957600080fd5b50565b600080604083850312156100ef57600080fd5b82516100fa816100c4565b602084015190925061010b816100c4565b809150509250929050565b610fd580620001266000396000f3fe608060405234801561001057600080fd5b50600436106100b0576000357c010000000000000000000000000000000000000000000000000000000090048063936421d511610083578063936421d514610119578063a6e497b61461013c578063b583127d14610167578063c3c5a5471461017a578063c54f16921461018d57600080fd5b8063090fc537146100b55780630ad2cd20146100ca57806312886441146100dd5780631f735227146100f0575b600080fd5b6100c86100c3366004610cb0565b6101a0565b005b6100c86100d8366004610cb0565b610205565b6100c86100eb366004610cb0565b61043e565b6101036100fe366004610cb0565b61073b565b6040516101109190610d3e565b60405180910390f35b61012c610127366004610d4c565b6107c9565b6040519015158152602001610110565b61014f61014a366004610cb0565b6108d4565b604051600160a060020a039091168152602001610110565b6100c8610175366004610cb0565b6109db565b61012c610188366004610cb0565b610a37565b6100c861019b366004610cb0565b610b67565b600354600160a060020a031633146101d65760405160e560020a62461bcd0281526004016101cd90610e01565b60405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60025460405160e260020a630935e01b028152336004820152600160a060020a03909116906324d7806c90602401602060405180830381865afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102749190610e5e565b6102c35760405160e560020a62461bcd02815260206004820152601860248201527f5468652073656e646572206d7573742062652061646d696e000000000000000060448201526064016101cd565b600160a060020a0381163b156102ee5760405160e560020a62461bcd0281526004016101cd90610e80565b6102f781610a37565b156103175760405160e560020a62461bcd0281526004016101cd90610edd565b600180546040517f6697a437000000000000000000000000000000000000000000000000000000008152600092600160a060020a0390921691636697a43791610364918691600401610f14565b6020604051808303816000875af1158015610383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a79190610f31565b6000546040517f287a074e000000000000000000000000000000000000000000000000000000008152919250600160a060020a03169063287a074e906103f69085906001908690600401610f4e565b6020604051808303816000875af1158015610415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104399190610e5e565b505050565b60025460405160e260020a630935e01b028152336004820152600160a060020a03909116906324d7806c90602401602060405180830381865afa158015610489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad9190610e5e565b6104fc5760405160e560020a62461bcd02815260206004820152601860248201527f5468652073656e646572206d7573742062652061646d696e000000000000000060448201526064016101cd565b600160a060020a0381163b156105275760405160e560020a62461bcd0281526004016101cd90610e80565b61053081610a37565b156105505760405160e560020a62461bcd0281526004016101cd90610edd565b60025460405160e260020a630935e01b028152600160a060020a038381166004830152909116906324d7806c90602401602060405180830381865afa15801561059d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c19190610e5e565b61065c5760405160e560020a62461bcd02815260206004820152604160248201527f546f20726567697374657220616e206164647265737320617320612070726f7660448201527f696465722c206974206d75737420626520616e2061646d696e6973747261746f60648201527f7200000000000000000000000000000000000000000000000000000000000000608482015260a4016101cd565b6001546040517f6697a437000000000000000000000000000000000000000000000000000000008152600091600160a060020a031690636697a437906106a9908590600290600401610f14565b6020604051808303816000875af11580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190610f31565b6000546040517f287a074e000000000000000000000000000000000000000000000000000000008152919250600160a060020a03169063287a074e906103f69085906002908690600401610f4e565b600080546040517f1f735227000000000000000000000000000000000000000000000000000000008152600160a060020a03848116600483015290911690631f73522790602401602060405180830381865afa15801561079f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c39190610f7e565b92915050565b6000841515806107d857508515155b156107e5575060006108c9565b600160a060020a0388163b6108c5576107fd88610a37565b80610874575060025460405160e260020a630935e01b028152600160a060020a038a81166004830152909116906324d7806c90602401602060405180830381865afa158015610850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108749190610e5e565b610880575060006108c9565b600160a060020a0387161580156108a55750600354600160a060020a03898116911614155b806108b85750600160a060020a0387163b155b156108c5575060006108c9565b5060015b979650505050505050565b60006108df82610a37565b6109545760405160e560020a62461bcd02815260206004820152602f60248201527f556e61626c6520746f206765742055736572436f6e74726163743a207573657260448201527f206e6f742072656769737465726564000000000000000000000000000000000060648201526084016101cd565b6000546040517fa6e497b6000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301529091169063a6e497b690602401602060405180830381865afa1580156109b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c39190610f31565b600354600160a060020a03163314610a085760405160e560020a62461bcd0281526004016101cd90610e01565b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600080546040517ff6a3d24e000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301529091169063f6a3d24e90602401602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf9190610e5e565b80156107c357506000546040517f1f735227000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301526003921690631f73522790602401602060405180830381865afa158015610b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4e9190610f7e565b6003811115610b5f57610b5f610cd4565b141592915050565b600160a060020a0381163b15610b925760405160e560020a62461bcd0281526004016101cd90610e80565b610b9b81610a37565b15610bbb5760405160e560020a62461bcd0281526004016101cd90610edd565b6001546040517f6697a437000000000000000000000000000000000000000000000000000000008152600091600160a060020a031690636697a43790610c079085908590600401610f14565b6020604051808303816000875af1158015610c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4a9190610f31565b600080546040517f287a074e000000000000000000000000000000000000000000000000000000008152929350600160a060020a03169163287a074e916103f6918691908690600401610f4e565b600160a060020a0381168114610cad57600080fd5b50565b600060208284031215610cc257600080fd5b8135610ccd81610c98565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610d3a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b602081016107c38284610d03565b600080600080600080600060c0888a031215610d6757600080fd5b8735610d7281610c98565b96506020880135610d8281610c98565b955060408801359450606088013593506080880135925060a088013567ffffffffffffffff80821115610db457600080fd5b818a0191508a601f830112610dc857600080fd5b813581811115610dd757600080fd5b8b6020828501011115610de957600080fd5b60208301945080935050505092959891949750929550565b6020808252602e908201527f5468652073656e646572206d757374206265207468652063726561746f72206f60408201527f662074686520636f6e7472616374000000000000000000000000000000000000606082015260800190565b600060208284031215610e7057600080fd5b81518015158114610ccd57600080fd5b6020808252602a908201527f52656769737465726564207573657220616464726573732063616e6e6f74206860408201527f617665206120636f646500000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f54686973207573657220697320616c7265616479207265676973746572656400604082015260600190565b600160a060020a038316815260408101610ccd6020830184610d03565b600060208284031215610f4357600080fd5b8151610ccd81610c98565b600160a060020a0384811682526060820190610f6d6020840186610d03565b808416604084015250949350505050565b600060208284031215610f9057600080fd5b815160048110610ccd57600080fdfea264697066735822122029af24e3c2b3d13385ea93f2e9dc6bf9c4efc21a04bd4d21ba582451dda74d5f64736f6c634300080c0033608060405234801561001057600080fd5b5060028054600160a060020a03191633179055610789806100326000396000f3fe608060405234801561001057600080fd5b506004361061009a576000357c0100000000000000000000000000000000000000000000000000000000900480637b510fe8116100785780637b510fe814610100578063949d225d14610122578063a6e497b614610133578063f6a3d24e1461015e57600080fd5b80631f7352271461009f578063287a074e146100c857806329092d0e146100eb575b600080fd5b6100b26100ad3660046105cf565b610189565b6040516100bf9190610628565b60405180910390f35b6100db6100d636600461063c565b61025e565b60405190151581526020016100bf565b6100fe6100f93660046105cf565b6103e9565b005b61011361010e3660046105cf565b6104dc565b6040516100bf93929190610685565b6000546040519081526020016100bf565b6101466101413660046105cf565b610564565b604051600160a060020a0390911681526020016100bf565b6100db61016c3660046105cf565b600160a060020a0316600090815260016020526040902054151590565b600160a060020a0381166000908152600160205260408120548061020e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4163636f756e74206e6f7420726567697374657265640000000000000000000060448201526064015b60405180910390fd5b600061021b6001836106b5565b8154811061022b5761022b6106dd565b600091825260209091206002909102015474010000000000000000000000000000000000000000900460ff169392505050565b600254600090600160a060020a031633146102a5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610205906106f6565b600160a060020a0384166000908152600160205260409020546103de576000604051806060016040528086600160a060020a031681526020018560038111156102f0576102f06105ea565b8152600160a060020a038086166020928301528354600181018555600094855293829020835160029095020180549490911673ffffffffffffffffffffffffffffffffffffffff19851681178255918301519293909291839174ffffffffffffffffffffffffffffffffffffffffff1916177401000000000000000000000000000000000000000083600381111561038a5761038a6105ea565b02179055506040918201516001918201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039283161790556000805491881681526020839052929092209190915590506103e2565b5060005b9392505050565b600254600160a060020a0316331461042d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610205906106f6565b600160a060020a038116600090815260016020526040902054801580159061045757506000548111155b156104d8576000805460039190610470906001906106b5565b81548110610480576104806106dd565b60009182526020909120600290910201805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000008360038111156104d2576104d26105ea565b02179055505b5050565b600160a060020a0381166000908152600160208190526040822054829182918291829161050991906106b5565b81548110610519576105196106dd565b600091825260209091206002909102018054600190910154600160a060020a03808316987401000000000000000000000000000000000000000090930460ff16975016945092505050565b600160a060020a03811660009081526001602052604081205481548291908110610590576105906106dd565b6000918252602090912060016002909202010154600160a060020a031692915050565b8035600160a060020a03811681146105ca57600080fd5b919050565b6000602082840312156105e157600080fd5b6103e2826105b3565b60e060020a634e487b7102600052602160045260246000fd5b600481106106245760e060020a634e487b7102600052602160045260246000fd5b9052565b602081016106368284610603565b92915050565b60008060006060848603121561065157600080fd5b61065a846105b3565b925060208401356004811061066e57600080fd5b915061067c604085016105b3565b90509250925092565b600160a060020a03848116825260608201906106a46020840186610603565b808416604084015250949350505050565b6000828210156106d85760e060020a634e487b7102600052601160045260246000fd5b500390565b60e060020a634e487b7102600052603260045260246000fd5b6020808252602c908201527f5468652073656e646572206d75737420626520746865206f776e6572206f662060408201527f74686520636f6e7472616374000000000000000000000000000000000000000060608201526080019056fea2646970667358221220eb24a545d9e3260e51d20fe3859141469cabf3c733175c4fe86e14f12bf2f2c664736f6c634300080c0033";

    public static final String FUNC_GETUSERCLASS = "getUserClass";

    public static final String FUNC_GETUSERCONTRACTADDRESS = "getUserContractAddress";

    public static final String FUNC_ISREGISTERED = "isRegistered";

    public static final String FUNC_REGISTRYDOCTOR = "registryDoctor";

    public static final String FUNC_REGISTRYPATIENT = "registryPatient";

    public static final String FUNC_REGISTRYPROVIDER = "registryProvider";

    public static final String FUNC_SETACCOUNTSTORAGE = "setAccountStorage";

    public static final String FUNC_SETUSERCONTRACTSFACTORY = "setUserContractsFactory";

    public static final String FUNC_TRANSACTIONALLOWED = "transactionAllowed";

    @Deprecated
    protected AccountController(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected AccountController(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected AccountController(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected AccountController(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<BigInteger> getUserClass(String _address) {
        final Function function = new Function(FUNC_GETUSERCLASS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getUserContractAddress(String account) {
        final Function function = new Function(FUNC_GETUSERCONTRACTADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> isRegistered(String account) {
        final Function function = new Function(FUNC_ISREGISTERED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> registryDoctor(String account) {
        final Function function = new Function(
                FUNC_REGISTRYDOCTOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> registryPatient(String account) {
        final Function function = new Function(
                FUNC_REGISTRYPATIENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> registryProvider(String account) {
        final Function function = new Function(
                FUNC_REGISTRYPROVIDER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setAccountStorage(String _accountStorage) {
        final Function function = new Function(
                FUNC_SETACCOUNTSTORAGE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _accountStorage)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setUserContractsFactory(String _userContractFactory) {
        final Function function = new Function(
                FUNC_SETUSERCONTRACTSFACTORY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _userContractFactory)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> transactionAllowed(String sender, String target, BigInteger value, BigInteger gasPrice, BigInteger gasLimit, byte[] payload) {
        final Function function = new Function(FUNC_TRANSACTIONALLOWED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, sender), 
                new org.web3j.abi.datatypes.Address(160, target), 
                new org.web3j.abi.datatypes.generated.Uint256(value), 
                new org.web3j.abi.datatypes.generated.Uint256(gasPrice), 
                new org.web3j.abi.datatypes.generated.Uint256(gasLimit), 
                new org.web3j.abi.datatypes.DynamicBytes(payload)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    @Deprecated
    public static AccountController load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new AccountController(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static AccountController load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new AccountController(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static AccountController load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new AccountController(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static AccountController load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new AccountController(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<AccountController> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _registryContract, String _userContractFactory) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registryContract), 
                new org.web3j.abi.datatypes.Address(160, _userContractFactory)));
        return deployRemoteCall(AccountController.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<AccountController> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _registryContract, String _userContractFactory) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registryContract), 
                new org.web3j.abi.datatypes.Address(160, _userContractFactory)));
        return deployRemoteCall(AccountController.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<AccountController> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _registryContract, String _userContractFactory) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registryContract), 
                new org.web3j.abi.datatypes.Address(160, _userContractFactory)));
        return deployRemoteCall(AccountController.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<AccountController> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _registryContract, String _userContractFactory) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registryContract), 
                new org.web3j.abi.datatypes.Address(160, _userContractFactory)));
        return deployRemoteCall(AccountController.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
